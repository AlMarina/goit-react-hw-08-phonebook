{"version":3,"file":"static/js/591.61105ebb.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.syled.js","components/ContactList/ContactList.jsx","pages/ContactPage/ContactPage.styled.js","pages/ContactPage/ContactPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactStore.contacts;\nexport const selectContactsIsLoading = state => state.contactStore.isLoading;\nexport const selectContactsError = state => state.contactStore.error;\n\nexport const selectFilter = state => state.filterStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter) ||\n        contact.phone.includes(filter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  margin: auto;\n  border: 1px solid;\n  border-radius: 4px;\n  width: 450px;\nbackground-color: rgba(197, 212, 180, 0.9);\n\n  &:focus-within {\n  border-color: blue;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 15px;\n  font-size: 18px;\n\n  &:focus-within {\n  color: blue;\n`;\n\nexport const InputForm = styled.input`\n  width: 250px;\n  height: 25px;\n  font-size: 18px;\n\n  &::placeholder {\n    color: rgba(134, 133, 136, 0.9);\n`;\n\nexport const BtnForm = styled.button`\n  width: 150px;\n  height: 25px;\n  border: 1px solid green;\n  border-radius: 4px;\n  font-size: 18px;\n\n  &:hover {\n    background-color: #c77676;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BtnForm, Form, InputForm, Label } from './ContactForm.styled';\n\nimport { addContacThunk } from '../../redux/contactsSlice';\nimport { selectContacts } from '../../redux/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    // const { name, number } = evt.target.elements;\n    const name = evt.target.elements.name.value;\n    const number = evt.target.elements.number.value;\n\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    console.log(name, number);\n    dispatch(addContacThunk({ name, number }));\n    evt.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Jacob Mercer\"\n        />\n      </Label>\n\n      <Label>\n        Number\n        <InputForm\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"761-23-96\"\n        />\n      </Label>\n      <BtnForm type=\"submit\">Add contact</BtnForm>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 18px;\n\n  &:focus-within {\n  color: blue;\n`;\n\nexport const InputFilter = styled.input`\n  margin: auto;\n  width: 250px;\n  height: 25px;\n  font-size: 18px;\n  outline: none;\n`;\n\nexport const Container = styled.div`\n  width: 500px;\n  margin: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Container, InputFilter, Label } from './Filter.styled';\nimport { setFilter } from '../../redux/filterSlice';\nimport { selectFilter } from '../../redux/selectors';\n\nexport const Filter = () => {\n  const filterState = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    dispatch(setFilter(evt.target.value.trim().toLowerCase()));\n  };\n\n  return (\n    <Container>\n      <Label>\n        Find contacts by name\n        <InputFilter\n          type=\"text\"\n          name=\"filter\"\n          required\n          onChange={onChange}\n          value={filterState}\n        />\n      </Label>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\nexport const BtnDelete = styled.button`\n  margin-left: 20px;\n  width: 100px;\n  height: 25px;\n  border: 1px solid green;\n  border-radius: 4px;\n  font-size: 14px;\n\n  &:hover {\n    background-color: #c77676;\n    color: white;\n    border: 1px solid black;\n  }\n`;\nexport const List = styled.ul`\n  font-size: 18px;\n  font-weight: 600;\n  // margin: 0 auto;\n  text-align: center;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BtnDelete, ListItem } from './ContactList.syled';\nimport { deleteContactThunk } from '../../redux/contactsSlice';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport { List } from './ContactList.syled';\nexport const ContactList = () => {\n  const filterContact = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {filterContact.map(contact => (\n        <ListItem key={contact.id}>\n          {contact.name}: {contact.phone}\n          <BtnDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContactThunk(contact.id))}\n          >\n            Delete\n          </BtnDelete>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 20px;\n`;\nexport const PostTitle = styled.h2`\n  text-align: center;\n  margin-top: 20px;\n  font-size: 26px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from '../../redux/selectors';\nimport { fetchContactsThunk } from '../../redux/contactsSlice';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport { Title, PostTitle } from './ContactPage.styled';\n\nconst ContactPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const isError = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <PostTitle>Contacts</PostTitle>\n        <Filter />\n        {isLoading && <Loader />}\n        {isError && <p>{isError}</p>}\n        {showContacts && <ContactList />}\n      </div>\n    </>\n  );\n};\n\nexport default ContactPage;\n"],"names":["selectContacts","state","contactStore","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","selectFilter","filterStore","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","phone","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","InputForm","_templateObject3","BtnForm","_templateObject4","ContactForm","useSelector","dispatch","useDispatch","_jsxs","onSubmit","evt","preventDefault","target","elements","value","number","find","alert","concat","console","log","addContacThunk","reset","children","_jsx","type","pattern","title","required","placeholder","InputFilter","Container","Filter","filterState","onChange","setFilter","trim","ListItem","BtnDelete","List","ContactList","filterContact","map","onClick","deleteContactThunk","id","Title","PostTitle","isError","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","_Fragment","Loader"],"sourceRoot":""}